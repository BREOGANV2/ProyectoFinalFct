/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author HREF DIGITAL
 */
public class ModificarRutinas extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ModificarRutinas.class.getName());

    /**
     * Creates new form ModificarRutinas
     */
    public ModificarRutinas() {
        
        initComponents();
        modelComboEjercicio=new DefaultComboBoxModel<>();
        modelComboUsuario=new DefaultComboBoxModel<>();
        modelLista=new DefaultListModel<>();
        modelotabla=table.getModel();
        
        lista.setModel(modelLista);
        comboEjercicios.setModel(modelComboEjercicio);
        comboUsuarios.setModel(modelComboUsuario);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        cargarRutinasEnTabla();
    }
public void cargarRutinasEnTabla() {
    try {
        // Limpiar primero
        modelComboUsuario.removeAllElements();
        modelComboEjercicio.removeAllElements();

        // Cargar usuarios
        for (Usuario u : UsuarioDAO.getInstance().selectAll()) {
            modelComboUsuario.addElement(u);
        }

        // Cargar ejercicios
        for (Ejercicio e : EjercicioDAO.getInstance().selectAll()) {
            modelComboEjercicio.addElement(e);
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al cargar usuarios o ejercicios", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
    try {
        rutinasCargadas = RutinaDAO.getInstance().selectAll();
        DefaultTableModel modelo = (DefaultTableModel) table.getModel();
        modelo.setRowCount(0); // limpiar tabla

        for (Rutina r : rutinasCargadas) {
            Usuario u = UsuarioDAO.getInstance().selectById(r.getIdUsuario());
            modelo.addRow(new Object[]{
                r.getNombre(),
                u.getNombre(),
                r.getDescripcion(),
                r.getObjetivo(),
                r.getFechaCreacion()
            });
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al cargar rutinas", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
}
private void cargarEjerciciosDeRutina(Rutina rutina) {
    try {
        modelLista.clear();
        ejerciciosTemporales.clear();

        List<RutinaEjercicio> listaRE = RutinaEjercicioDAO.getInstance().selectByRutina(rutina.getIdRutina());

        for (RutinaEjercicio re : listaRE) {
            ejerciciosTemporales.add(re);
            Ejercicio e = EjercicioDAO.getInstance().selectById(re.getIdEjercicio());
            modelLista.addElement(e);
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al cargar ejercicios de la rutina.", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboUsuarios = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        remove_ejercicio = new javax.swing.JButton();
        add_ejercicio = new javax.swing.JButton();
        comboEjercicios = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 800));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar Rutina"));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0};
        jPanel1Layout.rowHeights = new int[] {0, 26, 0, 26, 0, 26, 0, 26, 0, 26, 0, 26, 0, 26, 0, 26, 0};
        jPanel1.setLayout(jPanel1Layout);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Usuario", "Descripcion", "Objetivo", "Fecha"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel1.setText("Usuario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Objetivo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        jPanel1.add(comboUsuarios, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        jPanel1.add(jTextField1, gridBagConstraints);

        guardar.setText("guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 32;
        gridBagConstraints.gridy = 0;
        jPanel1.add(guardar, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Selector de Ejercicios"));
        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTextField4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTextField3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jTextField2, gridBagConstraints);

        jLabel7.setText("Repeticiones");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel7, gridBagConstraints);

        jLabel6.setText("Series");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel5.setText("orden");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(jLabel5, gridBagConstraints);

        lista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lista);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane4, gridBagConstraints);

        remove_ejercicio.setText("Eliminar");
        remove_ejercicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_ejercicioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 17;
        gridBagConstraints.gridy = 0;
        jPanel2.add(remove_ejercicio, gridBagConstraints);

        add_ejercicio.setText("Añadir");
        add_ejercicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_ejercicioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        jPanel2.add(add_ejercicio, gridBagConstraints);

        comboEjercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEjerciciosActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(comboEjercicios, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 27;
        gridBagConstraints.gridheight = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int fila = table.getSelectedRow();
    if (fila != -1) {
        rutinaSeleccionada = rutinasCargadas.get(fila);
        jTextField1.setText(rutinaSeleccionada.getNombre());
        jTextArea1.setText(rutinaSeleccionada.getDescripcion());
        jTextArea2.setText(rutinaSeleccionada.getObjetivo());

        // Selecciona el usuario correcto en el combo
        for (int i = 0; i < comboUsuarios.getItemCount(); i++) {
            if (comboUsuarios.getItemAt(i).getIdUsuario() == rutinaSeleccionada.getIdUsuario()) {
                comboUsuarios.setSelectedIndex(i);
                break;
            }
        }
    }
    cargarEjerciciosDeRutina(rutinaSeleccionada);

    }//GEN-LAST:event_tableMouseClicked

    private void comboEjerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEjerciciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEjerciciosActionPerformed

    private void add_ejercicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_ejercicioActionPerformed
         Ejercicio ejercicio = (Ejercicio) comboEjercicios.getSelectedItem();

    if (ejercicio != null && !modelLista.contains(ejercicio)) {
        try {
            int orden = Integer.parseInt(jTextField2.getText().trim());
            int series = Integer.parseInt(jTextField3.getText().trim());
            String repeticiones = jTextField4.getText().trim();

            RutinaEjercicio re = new RutinaEjercicio(
                0, // id_rutina se agregará al guardar
                ejercicio.getIdEjercicio(),
                orden,
                series,
                repeticiones
            );

            ejerciciosTemporales.add(re);
            modelLista.addElement(ejercicio);

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Orden, series y repeticiones deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Ya añadiste este ejercicio o no has seleccionado ninguno.");
    }
    }//GEN-LAST:event_add_ejercicioActionPerformed

    private void remove_ejercicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_ejercicioActionPerformed
        // TODO add your handling code here:
        Ejercicio seleccionado = lista.getSelectedValue();
    if (seleccionado != null) {
        modelLista.removeElement(seleccionado);
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un ejercicio para eliminar.");
    }
    }//GEN-LAST:event_remove_ejercicioActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
         if (rutinaSeleccionada == null) {
        JOptionPane.showMessageDialog(this, "Selecciona una rutina primero desde la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // 1. Actualizar los datos de la rutina
        rutinaSeleccionada.setNombre(jTextField1.getText().trim());
        rutinaSeleccionada.setDescripcion(jTextArea1.getText().trim());
        rutinaSeleccionada.setObjetivo(jTextArea2.getText().trim());
        Usuario usuario = (Usuario) comboUsuarios.getSelectedItem();
        rutinaSeleccionada.setIdUsuario(usuario.getIdUsuario());

        RutinaDAO.getInstance().update(rutinaSeleccionada);

        // 2. Eliminar ejercicios anteriores de esta rutina
        RutinaEjercicioDAO.getInstance().deleteByRutina(rutinaSeleccionada.getIdRutina());

        // 3. Insertar los ejercicios actuales (temporales)
        for (RutinaEjercicio re : ejerciciosTemporales) {
            RutinaEjercicio nuevo = new RutinaEjercicio(
                rutinaSeleccionada.getIdRutina(),
                re.getIdEjercicio(),
                re.getOrden(),
                re.getSeries(),
                re.getRepeticiones()
            );
            RutinaEjercicioDAO.getInstance().insert(nuevo);
        }

        JOptionPane.showMessageDialog(this, "Rutina actualizada correctamente.");
        cargarRutinasEnTabla();

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al guardar los cambios: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_guardarActionPerformed

    private void listaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaMouseClicked
        // TODO add your handling code here:
         Ejercicio seleccionado = lista.getSelectedValue();
    if (seleccionado != null) {
        for (RutinaEjercicio re : ejerciciosTemporales) {
            if (re.getIdEjercicio() == seleccionado.getIdEjercicio()) {
                jTextField2.setText(String.valueOf(re.getOrden()));
                jTextField3.setText(String.valueOf(re.getSeries()));
                jTextField4.setText(String.valueOf(re.getRepeticiones()));
                break;
            }
        }
    }
    }//GEN-LAST:event_listaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ModificarRutinas().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_ejercicio;
    private javax.swing.JComboBox<Ejercicio> comboEjercicios;
    private javax.swing.JComboBox<Usuario> comboUsuarios;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JList<Ejercicio> lista;
    private javax.swing.JButton remove_ejercicio;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    private DefaultComboBoxModel<Usuario> modelComboUsuario;
    private DefaultComboBoxModel<Ejercicio> modelComboEjercicio;
    private DefaultListModel<Ejercicio> modelLista;
    private TableModel modelotabla;
    private List<Rutina> rutinasCargadas = new ArrayList<>();
private Rutina rutinaSeleccionada;
private final List<RutinaEjercicio> ejerciciosTemporales = new ArrayList<>();


}
