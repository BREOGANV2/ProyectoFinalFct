/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author HREF DIGITAL
 */
public class VerRutinasEjecucion extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VerRutinasEjecucion.class.getName());

    /**
     * Creates new form VerUsuarios
     */
    public VerRutinasEjecucion() {
    initComponents();
    String[] columnas = { "Rutina", "Fecha", "Duración (min)", "Notas" };
table.setModel(new DefaultTableModel(columnas, 0));
modeloTabla = (DefaultTableModel) table.getModel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    cargarEjecucionesConNombreRutina();
}


    private void cargarEjecucionesConNombreRutina() {
    try {
        // Mapa de id_rutina ➜ nombre_rutina
        List<Rutina> rutinas = RutinaDAO.getInstance().selectAll();
        Map<Integer, String> mapaRutinas = new HashMap<>();
        for (Rutina r : rutinas) {
            mapaRutinas.put(r.getIdRutina(), r.getNombre());
        }

        // Lista de ejecuciones
        List<RutinaEjecucion> ejecuciones = RutinaEjecucionDAO.getInstance().selectAll();

        // Limpiar tabla
        modeloTabla.setRowCount(0);

        // Llenar tabla con datos
        for (RutinaEjecucion ejecucion : ejecuciones) {
            String nombreRutina = mapaRutinas.getOrDefault(ejecucion.getIdRutina(), "Desconocida");
            Object[] fila = {
                nombreRutina,
                ejecucion.getFechaEjecucion(),
                ejecucion.getDuracionMinutos() != null ? ejecucion.getDuracionMinutos() : "-",
                ejecucion.getNotas()
            };
            modeloTabla.addRow(fila);
        }

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al cargar ejecuciones", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Entrenamientos Existentes");
        setMinimumSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Rutina", "Fecha", "Duración", "Notas"
            }
        ));
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if (row >= 0) {
            table.setRowSelectionInterval(row, row);    // selecciona la fila
            table.setColumnSelectionInterval(0, 0);     // fuerza que solo la columna 0 quede seleccionada
        }
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new VerRutinasEjecucion().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel modeloTabla;
}
